var tipuesearch = {"pages": [{'title': '簡介', 'text': '在學期末前總共學了Onshape、V-rep操作、以及Github的管理，在本網頁終將會呈現本學期所學到的內容與實際操作的問題。在小組分組的主要任務中分配到手足球裡的送球機構設計與繪製，在繪製時對Onshape的使用上也有了不少心得。 \n \n', 'tags': '', 'url': '簡介.html'}, {'title': '學員出席', 'text': '以下記錄了我在這學期裡所有的刷卡紀錄與推送紀錄，證明在每個禮拜確實到教室與組員進行每周的所排定的任務。 \n Github推送紀錄 \n \n 點名紀錄 \n \n \n \n', 'tags': '', 'url': '學員出席.html'}, {'title': 'Onshape 協同操作', 'text': '在繪圖部分由於本身就是在網路上作圖，所以對於成員在同一時間各自操作各自的甚至是一同修改同一個圖檔也沒問題，遇到修改馬上更新對於我們最直接的好處就是不會有衝突的問題發生。 \n 繪圖過程: \n \n 在匯出的過程需要注意圖檔需求，如果是STL的話有分成個別轉出或合併轉出，當在組合圖的部分設定個別轉出時會全部零件分開來，每個零件的原點會在個別的原點上，當用合併轉出時，將會在組合圖座標原點的相對位置。 \n 合併轉出丟入V-rep結果 \n \n 個別轉出丟入V-rep結果 \n \n', 'tags': '', 'url': 'Onshape 協同操作.html'}, {'title': 'V-rep 模擬', 'text': '在完成繪圖的部分後，進行了自己的送球機構模擬。 \n \n 部分講解: \n 1.開啟旋轉軸 \n \n 2.將軸放在需要做旋轉的物件上並將分支樹裡相對應的物件放進軸裡。 \n \n 3.將物件設定干涉(如不需模擬或例如不動的本體就不需打開Body is dynamic) \n \n 4.設定球與撥桿時需要進行物理的參數 Body is dynamic就須開啟。 \n \n 5.如發現撥桿的轉速太慢可修改轉速，而球的重量太重可以修改撥桿軸的扭力。 \n \n 6.之後發現模擬呈現不順時，修改元件的簡化程度。 \n \n 7.用來調整元件的簡化程度，越簡化越能提升電腦運算的效率，但簡化太多易造成模擬瑕疵 \n \n \n', 'tags': '', 'url': 'V-rep 模擬.html'}, {'title': 'Github 倉儲管理', 'text': '第三組分組倉儲: https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g3_1 \n 在分組的倉儲裡每周持續更新內容上去，十六周將東西整理好更新最後成果上去。 \n \n 組長Fork倉儲: https://github.com/40623128/cd2019a \n 除了剛建立時，試推了東西確認沒問題，接下來就等全部任務結束後進行最後的推送而確定沒問題後交由組長與班級網頁做推送的工作。 \n \n 協同產品設計個人倉儲: https://github.com/40623156/56CC \n', 'tags': '', 'url': 'Github 倉儲管理.html'}, {'title': '程式開發', 'text': '程式開發的部分因參與的時間較晚，所以學的東西並沒有像V-rep模擬與Onshape來的那麼深入，看得懂部分程式與參數修改。 \n \n 程式碼 \n import vrep\nimport sys, math\nimport keyboard\n# child threaded script: \n# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入\n#simExtRemoteApiStart(19999)\n  \nvrep.simxFinish(-1)\n  \nclientID = vrep.simxStart(\'127.0.0.1\', 19997, True, True, 5000, 5)\nKickBallV = 360  \n#揮棒速度\nMove_Minus =-0.1        \nMove_Plus =0.1\nn=1\nR_KickBallVel = (math.pi/180)*KickBallV\n#揮棒後球速\nB_KickBallVel = -(math.pi/180)*KickBallV\nif clientID!= -1:\n    print("Connected to remote server")\nelse:\n    print(\'Connection not successful\')\n    sys.exit(\'Could not connect\')\n\nerrorCode,Sphere_handle=vrep.simxGetObjectHandle(clientID,\'Sphere\',vrep.simx_opmode_oneshot_wait)\nerrorCode,P1_handle=vrep.simxGetObjectHandle(clientID,\'P1\',vrep.simx_opmode_oneshot_wait)\nerrorCode,A1_handle=vrep.simxGetObjectHandle(clientID,\'A1\',vrep.simx_opmode_oneshot_wait)\nerrorCode,R1_handle=vrep.simxGetObjectHandle(clientID,\'R1\',vrep.simx_opmode_oneshot_wait)\nerrorCode,B1_handle=vrep.simxGetObjectHandle(clientID,\'B1\',vrep.simx_opmode_oneshot_wait)\nerrorCode,P2_handle=vrep.simxGetObjectHandle(clientID,\'P2\',vrep.simx_opmode_oneshot_wait)\nerrorCode,A2_handle=vrep.simxGetObjectHandle(clientID,\'A2\',vrep.simx_opmode_oneshot_wait)\nerrorCode,R2_handle=vrep.simxGetObjectHandle(clientID,\'R2\',vrep.simx_opmode_oneshot_wait)\nerrorCode,B2_handle=vrep.simxGetObjectHandle(clientID,\'B2\',vrep.simx_opmode_oneshot_wait)\n\nif errorCode == -1:\n    print(\'Can not find left or right motor\')\n    sys.exit()\ndef start():\n    errorCode = vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)\n\ndef stop():\n    errorCode = vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)\n\ndef pause():\n    errorCode = vrep.simxStartSimulation(clientID,vrep.simx_opmode_oneshot_wait)\n\ndef getballposition():\n    errorCode,position_A1R=vrep.simxGetObjectPosition(clientID,A1_handle,-1,vrep.simx_opmode_oneshot)\n    errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)\n    A1v=position_S[1] - position_A1R[1]\n    AA1v=position_S[0] - position_A1R[0]\n    while True:\n        if A1v <= 0 and AA1v <= 0.015:\n            errorCode,position_A1R=vrep.simxGetObjectPosition(clientID,A1_handle,-1,vrep.simx_opmode_oneshot)\n            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)\n            A1v =position_S[1]- position_A1R[1]\n            AA1v =position_S[0] - position_A1R[0]\n            vrep.simxSetJointTargetVelocity(clientID,R1_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)\n          \n        elif A1v > 0 and AA1v <= 0.015:\n            errorCode,position_A1R=vrep.simxGetObjectPosition(clientID,A1_handle,-1,vrep.simx_opmode_oneshot)\n            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)\n            A1v =position_S[1]- position_A1R[1]\n            AA1v =position_S[0] - position_A1R[0]\n            vrep.simxSetJointTargetVelocity(clientID,R1_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)\n              \n        elif A1v <= 0 and AA1v > 0.015:\n            errorCode,position_A1R=vrep.simxGetObjectPosition(clientID,A1_handle,-1,vrep.simx_opmode_oneshot)\n            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)\n            A1v =position_S[1]- position_A1R[1]\n            AA1v =position_S[0] - position_A1R[0]\n            vrep.simxSetJointTargetVelocity(clientID,R1_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)\n          \n        elif A1v > 0 and AA1v > 0.015:\n            errorCode,position_A1R=vrep.simxGetObjectPosition(clientID,A1_handle,-1,vrep.simx_opmode_oneshot)\n            errorCode,position_S=vrep.simxGetObjectPosition(clientID,Sphere_handle,-1,vrep.simx_opmode_oneshot)\n            A1v =position_S[1]- position_A1R[1]\n            AA1v =position_S[0] - position_A1R[0]\n            vrep.simxSetJointTargetVelocity(clientID,R1_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)\n            \n        try:\n            if keyboard.is_pressed(\'w\'): \n                vrep.simxSetJointTargetVelocity(clientID,R2_handle,R_KickBallVel,vrep.simx_opmode_oneshot_wait)\n            elif keyboard.is_pressed(\'x\'):  \n                vrep.simxSetJointTargetVelocity(clientID,R2_handle,B_KickBallVel,vrep.simx_opmode_oneshot_wait)\n            elif keyboard.is_pressed(\'d\'):  \n                vrep.simxSetJointTargetVelocity(clientID,P2_handle,0.05,vrep.simx_opmode_oneshot_wait)\n            elif keyboard.is_pressed(\'s\'):\n                vrep.simxSetJointTargetVelocity(clientID,P2_handle,0,vrep.simx_opmode_oneshot_wait)\n            elif keyboard.is_pressed(\'a\'):  \n                vrep.simxSetJointTargetVelocity(clientID,P2_handle,-0.05,vrep.simx_opmode_oneshot_wait)\n            else:\n                pass\n        except:\n            break\n            \n        MMMB = A1v*-2\n        vrep.simxSetJointTargetVelocity(clientID,P1_handle,MMMB,vrep.simx_opmode_oneshot_wait)\n\nvrep.simxSetJointTargetVelocity(clientID,R1_handle,0,vrep.simx_opmode_oneshot_wait)\nvrep.simxSetJointTargetVelocity(clientID,P2_handle,0,vrep.simx_opmode_oneshot_wait)\n\nstart()\ngetballposition()\nstop() \n', 'tags': '', 'url': '程式開發.html'}, {'title': '心得', 'text': '這學期的十人分組已不是上學期的五人分組那麼簡單，在分配個人任務越來越細，此時自己的想法如何被大家都能接受就要費很大的心思，在製圖的尺寸修改小問題都很容易解決，但在經過期中的V-rep一步一步的教學後，突然要丟個小組設計的東西進行模擬還是需要組員的互相指導，對於PDF製作的問題也遇到很多問題，很感謝遇到了一群很有耐心組員互相幫忙，大家一起合作才有一份成功的報告。', 'tags': '', 'url': '心得.html'}, {'title': '期末影片', 'text': '', 'tags': '', 'url': '期末影片.html'}]};